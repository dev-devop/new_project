# Generated by Django 4.2.1 on 2023-06-02 05:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('restaurant_management', '0001_initial'),
        ('user_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=15, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('timestamp', models.DateTimeField()),
                ('status', models.CharField(max_length=20)),
                ('payment_status', models.CharField(max_length=10)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order', to='user_auth.userprofile')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='order', to='restaurant_management.restaurant')),
            ],
            options={
                'ordering': ['status', 'id', 'timestamp', 'payment_status'],
            },
        ),
        migrations.CreateModel(
            name='OrderedItem',
            fields=[
                ('order_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='orderAndCart.order')),
                ('product', models.CharField(max_length=400)),
                ('quantity', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=3, max_digits=10)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='meal', to='restaurant_management.menu')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item', to='orderAndCart.order')),
            ],
            options={
                'ordering': ['order'],
            },
            bases=('orderAndCart.order',),
        ),
    ]
